{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/HomeComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/ContactComponent.js","components/AboutComponent.js","components/CommentFormComponent.js","components/DishdetailComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","onClick","Card","to","id","CardImg","width","src","image","alt","name","CardImgOverlay","CardTitle","Menu","props","menu","dishes","map","key","isLoading","errMess","Breadcrumb","BreadcrumbItem","active","RenderCard","item","in","transformProps","exitTransform","CardBody","designation","CardSubtitle","CardText","description","Home","dishesLoading","dishErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","Header","toggleNav","bind","toggleModal","handleLogin","state","isNavOpen","isModalOpen","this","setState","event","alert","username","value","password","remember","checked","preventDefault","Navbar","dark","expand","NavbarToggler","NavbarBrand","href","height","Collapse","isOpen","navbar","Nav","NavItem","Button","outline","Jumbotron","Modal","toggle","ModalHeader","ModalBody","Form","onSubmit","FormGroup","Label","htmlFor","Input","type","innerRef","input","check","color","Component","Footer","Contact","handleSubmit","values","console","log","JSON","stringify","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","resetFeedbackForm","required","val","length","maxLength","len","minLength","role","model","Row","md","Col","text","placeholder","validators","show","messages","isNumber","isNaN","Number","validEmail","test","size","offset","checkbox","select","textarea","rows","Renderleader","Media","tag","left","middle","object","body","heading","About","leaders","CardHeader","title","list","Leader","CommentForm","postComment","dishId","rating","author","comment","RenderDish","top","RenderComments","comments","comm","Intl","DateTimeFormat","year","month","day","format","Date","date","Dishdetail","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","newFeedback","actions","reset","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.68b0ab27.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl= 'http://localhost:3001/';","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay,\r\n    CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n\r\n    function RenderMenuItem ({dish, onClick}) {\r\n        return (\r\n            <Card>\r\n                <Link to={`/menu/${dish.id}`} >\r\n                    <CardImg width=\"100%\" src={baseUrl+ dish.image} alt={dish.name} />\r\n                    <CardImgOverlay>\r\n                        <CardTitle className=\"strong\"><h5>{dish.name}</h5></CardTitle>\r\n                    </CardImgOverlay>\r\n                </Link>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n    const Menu = (props) => {\r\n\r\n        const menu = props.dishes.dishes.map((dish) => {\r\n            return (\r\n                <div className=\"col-12 col-md-5 m-1\"  key={dish.id}>\r\n                    <RenderMenuItem dish={dish}/>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        if (props.dishes.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dishes.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\"> \r\n                        <div className=\"col-12\">\r\n                            <h4>{props.dishes.errMess}</h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>Menu</h3>\r\n                            <hr />\r\n                        </div>                \r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {menu}\r\n                    </div>\r\n                </div>\r\n            );\r\n    }\r\n\r\nexport default Menu;","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody,\r\n    CardTitle, CardSubtitle} from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction Home(props) {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} isLoading={props.promoLoading} errMess={props.promoErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader} isLoading={props.leaderLoading} errMess={props.leaderErrMess} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nfunction RenderCard({item, isLoading, errMess}) {\r\n    \r\n    if (isLoading) {\r\n        return(\r\n                <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return(\r\n                <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else \r\n        return(\r\n            <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                    <CardTitle>{item.name}</CardTitle>\r\n                    {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n                    <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n    Button, Modal, ModalHeader, ModalBody,\r\n    Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n\r\n        this.state = {\r\n          isNavOpen: false,\r\n          isModalOpen: false\r\n        };\r\n      }\r\n\r\n      toggleNav() {\r\n        this.setState({\r\n          isNavOpen: !this.state.isNavOpen\r\n        });\r\n      }\r\n      toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n      }\r\n      handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n      }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                            </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                    <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n                                </NavItem>\r\n                    </Nav>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                        <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                        <ModalBody>\r\n                            <Form onSubmit={this.handleLogin}>\r\n                                <FormGroup>\r\n                                    <Label htmlFor=\"username\">Username</Label>\r\n                                    <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                        innerRef={(input) => this.username = input} />\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label htmlFor=\"password\">Password</Label>\r\n                                    <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                        innerRef={(input) => this.password = input}  />\r\n                                </FormGroup>\r\n                                <FormGroup check>\r\n                                    <Label check>\r\n                                        <Input type=\"checkbox\" name=\"remember\"\r\n                                        innerRef={(input) => this.remember = input}  />\r\n                                        Remember me\r\n                                    </Label>\r\n                                </FormGroup>\r\n                                <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                            </Form>\r\n                    \r\n                        </ModalBody>\r\n                    </Modal>\r\n                </Jumbotron>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to='/home'>Home</Link></li>\r\n                        <li><Link to='/aboutus'>About Us</Link></li>\r\n                        <li><Link to='/menu'>Menu</Link></li>\r\n                        <li><Link to='/contactus'>Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Breadcrumb, BreadcrumbItem,\r\n    Button, Row, Col, Label } from 'reactstrap';\r\nimport { Control, Form, Errors} from 'react-redux-form';\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Thank you for your feedback!' + JSON.stringify(values));\r\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.agree, values.contactType, values.message);\r\n        this.props.resetFeedbackForm();\r\n    }\r\n    \r\n\r\n    render() {\r\n        const required = (val) => val && val.length;\r\n        const maxLength = (len) => (val) => !(val) || (val.length <= len);\r\n        const minLength = (len) => (val) => val && (val.length >= len);\r\n        const isNumber = (val) => !isNaN(Number(val));\r\n        const validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\" href=\"/\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                   <div className=\"col-12\">\r\n                      <h3>Send us your Feedback</h3>\r\n                   </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                        <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required ',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required ',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required ',\r\n                                            minLength: 'Must be greater than 2 numbers ',\r\n                                            maxLength: 'Must be 15 numbers or less ',\r\n                                            isNumber: 'Must be a number '\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required ',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                    <span> </span>\r\n                                    <Button type=\"reset\"  onClick={ ()=> this.props.resetFeedbackForm() }>\r\n                                    Cancel\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n               </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n    \r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction Renderleader({leader}) {\r\n    return (\r\n        <div>\r\n        <Media tag=\"li\" className=\"m-1\">\r\n          <Media left middle>\r\n              <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n          </Media>\r\n          <Media body className=\"ml-5\">\r\n            <Media heading>{leader.name}</Media>\r\n            <p>{leader.designation}</p>\r\n            <p>{leader.description}</p>\r\n          </Media>\r\n        </Media>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction About(props) {\r\n\r\n    \r\n    \r\n    \r\n    \r\n    if (props.leaders.isLoading) {\r\n        \r\n        return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">            \r\n                <Loading />\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n    else if (props.leaders.errMess) {\r\n\r\n        return(\r\n        <div className=\"container\">\r\n            <div className=\"row\"> \r\n                <div className=\"col-12\">\r\n                    <h4>{props.dishes.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n    else {\r\n        \r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>About Us</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <h2>Our History</h2>\r\n                        <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                        <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5\">\r\n                        <Card>\r\n                            <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                            <CardBody>\r\n                                <dl className=\"row p-1\">\r\n                                    <dt className=\"col-6\">Started</dt>\r\n                                    <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                    <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                    <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                    <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                    <dd className=\"col-6\">$1,250,375</dd>\r\n                                    <dt className=\"col-6\">Employees</dt>\r\n                                    <dd className=\"col-6\">40</dd>\r\n                                </dl>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <Card>\r\n                            <CardBody className=\"bg-faded\">\r\n                                <blockquote className=\"blockquote\">\r\n                                    <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                        I'm not hungry enough to eat six.</p>\r\n                                    <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                    <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                        P. Pepe, Diversion Books, 2014</cite>\r\n                                    </footer>\r\n                                </blockquote>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h2>Corporate Leadership</h2>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <Media list>\r\n                        <Stagger in>{\r\n                        props.leaders.leaders.map((Leader) => {\r\n                            return (\r\n                                <Fade in>\r\n                                <div key={Leader.id}>\r\n                                    <Renderleader leader={Leader}/>\r\n                                </div>\r\n                                </Fade>\r\n                            );\r\n                        })}\r\n                        </Stagger>\r\n                        </Media>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        \r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default About;    ","import React, { Component } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody,Row , Col, Label } from 'reactstrap';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\n\r\nclass CommentForm extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n        this.state = {\r\n          isModalOpen: false\r\n        };\r\n      }\r\n    toggleModal() {\r\n    this.setState({\r\n        isModalOpen: !this.state.isModalOpen\r\n    });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    }\r\n\r\n    render(){\r\n        const required = (val) => val && val.length;\r\n        const maxLength = (len) => (val) => !(val) || (val.length <= len);\r\n        const minLength = (len) => (val) => val && (val.length >= len);\r\n        return(\r\n            <>\r\n            <div><div>\r\n                <Button outline onClick={this.toggleModal}><span className=\"fa fa-pencil fa-lg\"></span> Submit Comment</Button>\r\n            </div></div>\r\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                <ModalBody>\r\n                    <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"rating\" md={12}>Rating</Label>\r\n                            <Col>\r\n                                <Control.select model=\".rating\" name=\"rating\" className=\"form-control\">\r\n                                    <option>1</option>\r\n                                    <option>2</option>\r\n                                    <option>3</option>\r\n                                    <option>4</option>\r\n                                    <option>5</option>\r\n                                </Control.select>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"author\" md={12}>Your Name</Label>\r\n                            <Col md={12}>\r\n                                <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                    placeholder=\"Your Name\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                    }}\r\n                                    />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".author\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required ',\r\n                                        minLength: 'Must be greater than 2 characters',\r\n                                        maxLength: 'Must be 15 characters or less'\r\n                                    }}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"comment\" md={12}>Comment</Label>\r\n                            <Col md={12}>\r\n                                <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                    rows=\"6\"\r\n                                    className=\"form-control\" />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Col md={2}>\r\n                                <Button type=\"submit\" color=\"primary\">\r\n                                Submit\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </LocalForm>\r\n            \r\n                </ModalBody>\r\n            </Modal>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default CommentForm;","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport  CommentForm  from './CommentFormComponent';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nconst Dishdetail = (props)=>{\r\n    if (props.isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.errMess) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dish != null) \r\n        return (\r\n            <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>{props.dish.name}</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                    <RenderDish dish={props.dish} />\r\n                </div>\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                <RenderComments comments={props.comments}\r\n                    postComment={props.postComment}\r\n                    dishId={props.dish.id}\r\n                />\r\n                </div>\r\n            </div>\r\n            </div>\r\n        );\r\n    else\r\n        return(\r\n            <div></div>\r\n        );\r\n\r\n}\r\n\t\r\n\tfunction RenderDish({dish}) {\r\n\t\treturn(\r\n\t\t\t<FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n            <Card>\r\n                <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardBody>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                    <CardText>{dish.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n            </FadeTransform>\t\t\r\n\t\t);\r\n\t}\r\n    function RenderComments({comments, postComment, dishId}) {\r\n\t\tif(comments!=null){\r\n        \r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<h4>Comments</h4>\r\n\t\t\t\t<div className=\"list-unstyled\">\r\n                    <Stagger in>{\r\n                        comments.map((comm)=>{\r\n                            return (\r\n                                <Fade in>\r\n                                    <div key={comm.id}>\r\n                                    <li>\r\n                                        <p>{comm.comment}</p>\r\n                                        <p>-- {comm.author}<span></span>, <span>{new Intl.DateTimeFormat('en-US', {\r\n                                                year: 'numeric',\r\n                                                month: 'short',\r\n                                                day: '2-digit'\r\n                                            }).format(new Date(comm.date))}</span></p>\r\n                                    </li>\r\n                                    </div>\r\n                                </Fade>\r\n                            );\r\n                        })\r\n                    }</Stagger>\r\n\t\t\t\t</div>\r\n                <CommentForm dishId={dishId} postComment={postComment} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn(<div></div>);\r\n\t}\r\nexport default Dishdetail;","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n    \r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n};\r\n\r\nexport const addFeedback = (feedback) => ({\r\n  type: ActionTypes.ADD_FEEDBACK,\r\n  payload: feedback\r\n});\r\n\r\nexport const postFeedback = ( firstname, lastname, telnum, email, agree, contactType, message ) => (dispatch) => {\r\n\r\n  const newFeedback = {\r\n    firstname: firstname,\r\n    lastname: lastname,\r\n    telnum: telnum,\r\n    email: email,\r\n    agree: agree,\r\n    contactType: contactType,\r\n    message: message\r\n  };\r\n  newFeedback.date = new Date().toISOString();\r\n  \r\n  return fetch(baseUrl + 'feedback', {\r\n      method: \"POST\",\r\n      body: JSON.stringify(newFeedback),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      credentials: \"same-origin\"\r\n  })\r\n  .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n          throw error;\r\n    })\r\n  .then(response => response.json())\r\n  .then(response => dispatch(addFeedback(response)))\r\n  .catch(error =>  { console.log('post feedback', error.message); alert('Your feedback could not be posted\\nError: '+error.message); });\r\n};\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    \r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    \r\n  dispatch(leadersLoading());\r\n\r\n  return fetch(baseUrl + 'leaders')\r\n  .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n          var errmess = new Error(error.message);\r\n          throw errmess;\r\n    })\r\n  .then(response => response.json())\r\n  .then(leaders => dispatch(addLeaders(leaders)))\r\n  .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\n\r\nexport const leadersLoading = () => ({\r\n  type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n  type: ActionTypes.LEADERS_FAILED,\r\n  payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n  type: ActionTypes.ADD_LEADERS,\r\n  payload: leaders\r\n});","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK';","import React, { Component } from 'react';\r\nimport Menu from './MenuComponent';\r\nimport Home from './HomeComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport { postComment,fetchLeaders, fetchDishes, fetchComments, fetchPromos, postFeedback } from '../redux/ActionCreators';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  postFeedback: (firstname, lastname, telnum, email, agree, contactType, message)=> dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message)),\r\n  fetchDishes: () => { dispatch(fetchDishes())},\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n  fetchComments: () => dispatch(fetchComments()),\r\n  fetchPromos: () => dispatch(fetchPromos()),\r\n  fetchLeaders: () => dispatch(fetchLeaders())\r\n});\r\n\r\n\r\n\r\nclass Main extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  }\r\n  \r\n  render() {\r\n    const HomePage = () => {\r\n      return(\r\n        <Home \r\n        dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n        dishesLoading={this.props.dishes.isLoading}\r\n        dishErrMess={this.props.dishes.errMess}\r\n        promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n        promoLoading={this.props.promotions.isLoading}\r\n        promoErrMess={this.props.promotions.errMess}\r\n        leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n        leaderLoading={this.props.leaders.isLoading}\r\n        leaderErrMess={this.props.leaders.errMess}\r\n        />\r\n      );\r\n    }\r\n\r\n    const DishWithId = ({match}) => {\r\n      return(\r\n        <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n        isLoading={this.props.dishes.isLoading}\r\n        errMess={this.props.dishes.errMess}\r\n        comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n        commentsErrMess={this.props.comments.errMess}\r\n        postComment={this.props.postComment}\r\n      />\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <div>\r\n         <TransitionGroup>\r\n            <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n              <Switch location={this.props.location}>\r\n                  <Route path='/home' component={HomePage} />\r\n                  <Route exact path='/aboutus' component={() => <About leaders={this.props.leaders} />} />\r\n                  <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n                  <Route path='/menu/:dishId' component={DishWithId} />\r\n                  <Route exact path='/contactus' component={() => <Contact postFeedback={this.props.postFeedback} resetFeedbackForm={this.props.resetFeedbackForm} />} />\r\n                  <Redirect to=\"/home\" />\r\n              </Switch>\r\n            </CSSTransition>\r\n          </TransitionGroup>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = { isLoading: true,\r\n    errMess: null,\r\n    dishes:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_COMMENTS:\r\n      return {...state, errMess: null, comments: action.payload};\r\n\r\n    case ActionTypes.COMMENTS_FAILED:\r\n      return {...state, errMess: action.payload};\r\n\r\n    case ActionTypes.ADD_COMMENT:\r\n        var comment = action.payload;\r\n        return { ...state, comments: state.comments.concat(comment)};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state  = { isLoading: true,\r\n    errMess: null,\r\n    leaders:[]}, action) => {\r\nswitch (action.type) {\r\ncase ActionTypes.ADD_LEADERS:\r\nreturn {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n\r\ncase ActionTypes.LEADERS_LOADING:\r\nreturn {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\ncase ActionTypes.LEADERS_FAILED:\r\nreturn {...state, isLoading: false, errMess: action.payload};\r\n\r\ndefault:\r\nreturn state;\r\n}\r\n};","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import React, { Component } from 'react';\r\nimport Main from './components/MainComponent';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './App.css';\r\nimport { Provider } from 'react-redux';\r\nimport { ConfigureStore } from './redux/configureStore';\r\n\r\nconst store = ConfigureStore();\r\n\r\nclass App extends Component {\r\n  \r\n  render(){\r\n  return (\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <div className=\"App\">\r\n          <Main />\r\n        </div>\r\n      </BrowserRouter>\r\n    </Provider>\r\n  );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import {createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { createForms } from 'react-redux-form';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}